#create validation for LU map

#import library
library(raster)
options("rgdal_show_exportToProj4_warnings"="none")
library(rgdal)
library(dplyr)


################################
#parameters to change below
###############################

#setting working directory
setwd("F:/sops/sop0/validation")
#place where the stratification map is
map_file <- "../output/erpaa_2020_ver1_01.tif"
#outfile

#reading collect earth .csv from operator
op1 <- read.csv("Topaniaina_collectedData_earthcollecte_carte_ctratification_2020_on_210521_171020_CSV_vf.csv")
op2 <- read.csv("Tahiry_collectedData_earthcollecte_carte_ctratification_2020_on_260521_145143_CSV_controllees.csv")
op3 <- read.csv("Johary_collectedData_earthcollecte_carte_ctratification_2020_on_280521_152543_CSV_Controlled.csv")
op4 <- read.csv("Sitraka_collectedData_earthcollecte_carte_ctratification_2020_on_280521_154509_CSV.csv")
op5 <- read.csv("Baovola_collectedData_earthcollecte_carte_ctratification_2020_on_280521_121552_CSV.csv")


###########################################################
#end of parameters and setting, not much to change from here
###########################################################

#combine to one database
all <- rbind(op1,op2,op3,op4,op5)

#create a column for LandUse change
#first recoding the value to the usual F,N,W
all$lu2019 <- recode(all$classe2019,"foret"="F","non_foret"="N","eau"="W","autres"="N")
all$lu2020 <- recode(all$classe2020,"foret"="F","non_foret"="N","eau"="W","autres"="N")
all$luchange <- paste(all$lu2019,all$lu2020,sep = "")


lu_change <- table(all$luchange)


lu_change <- data.frame(lu_change)
names(lu_change) <- c("class","freq")

lu_change$area <- lu_change$freq*1600
write.csv(lu_change,"erpa_2019_2020.csv")

#########################################
## creating confusion matrix
#########################################

#transforming to spatial

#setting WG84 projection
geogr <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"

coordinates(all) <- ~location_x+location_y
projection(all) <- geogr

#importing the stratification raster
stratif_map <- raster(map_file)

#attaching raster values to the collect earth points
all_stratif <- extract(stratif_map,all)

#data for the confusion matrix
data_confusion <- cbind(all,all_stratif)

data_confusion <- data_confusion[,c(1,34,35,36,37)]
names(data_confusion) <- c("id","lu2019","lu2020","luchange","map")

#take off points in the buffer
data_confusion <- subset(data_confusion,!is.na(data_confusion$map))

#write to a shapefile
writeOGR(obj = data_confusion,dsn = ".",layer = "data_confusion",driver = "ESRI Shapefile",overwrite_layer = T)
write.csv(data_confusion,"data_confusion.txt")

# Error computation
#
conf_matrix <- as.data.frame(data_confusion@data)
#for the comparison, we need to change the values to match, so FF = 11,FN = 12 etc...
conf_matrix$collect <- recode(conf_matrix$luchange,"FF"=11,"FN"=12,"NN"=22,"NF"=21,"WW"=44,WN=44)

confusion_matrix <- as.data.frame.matrix(table(conf_matrix$collect,conf_matrix$map))
write.csv(confusion_matrix,"confusion_matrix.csv")
#table of errors
table_errors <- data.frame("landuse" = as.character(),"omission" = as.numeric(),"commission"=as.numeric())

for (lu in unique(conf_matrix$collect)){
  mydata <- subset(conf_matrix,conf_matrix$collect==lu)
  mydata_reverse <-subset(conf_matrix,conf_matrix$map==lu)
  #correct<-sum(mydata$collect==mydata$map)/nrow(mydata)
  omit <- sum(mydata$collect!=mydata$map)/nrow(mydata)
  comit <- sum(mydata_reverse$collect!=mydata_reverse$map)/nrow(mydata_reverse)
  data_toadd <- data.frame("landuse"=as.character(lu),"omission"= omit,"commission"=comit)
  table_errors <- rbind(table_errors,data_toadd)
  
}

write.csv(table_errors,"table_of_errors.csv")
